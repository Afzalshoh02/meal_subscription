<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;

class OrderRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     */
    public function authorize(): bool
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array<string, \Illuminate\Contracts\Validation\ValidationRule|array<mixed>|string>
     */
    public function rules(): array
    {
        return [
            'client_name' => 'required|string|max:255',
            'client_phone' => 'required|string|unique:orders,client_phone|regex:/^7\d{10}$/',
            'tariff_id' => 'required|integer|exists:tariffs,id',
            'schedule_type' => 'required|in:EVERY_DAY,EVERY_OTHER_DAY,EVERY_OTHER_DAY_TWICE',
            'comment' => 'nullable|string',
            'date_ranges' => 'required|array',
            'date_ranges.*.from' => 'required|date',
            'date_ranges.*.to' => 'required|date|after_or_equal:date_ranges.*.from',
        ];
    }
    public function messages(): array
    {
        return [
            'client_phone.regex' => '–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å 7 –∏ —Å–æ–¥–µ—Ä–∂–∞—Ç—å 11 —Ü–∏—Ñ—Ä.',
            'client_phone.required' => 'üìû –ü–æ–ª–µ "Client Phone" –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.',
            'client_phone.unique' => '‚ùå –≠—Ç–æ—Ç –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è!',
            'date_ranges.*.to.after_or_equal' => '–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ø–æ—Å–ª–µ –∏–ª–∏ —Ä–∞–≤–Ω–∞ –¥–∞—Ç–µ –Ω–∞—á–∞–ª–∞.',
        ];
    }
}
